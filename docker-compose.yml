services:
  taxi:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db

  db:
    image: postgres:16.0-alpine3.17
    restart: always
    env_file:
      - .env
    volumes:
      - my_db:$PGDATA


  redis:
    image: "redis:alpine"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A taxi_service worker -l info"
    depends_on:
      - taxi
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
             celery -A taxi_service beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - taxi
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5555:5555"
    command: "celery -A taxi_service flower --address=0.0.0.0"
    depends_on:
      - celery
    env_file:
      - .env

volumes:
  my_db:
  my_media:

